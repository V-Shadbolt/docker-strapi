name: PR Build Check

on:
  pull_request:
    branches:
      - main

jobs:
  test-pr-build:
    name: Test Strapi Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [v4, v5]

    concurrency:
      group: 'pr-${{ github.head_ref }}-${{ matrix.version }}'
      cancel-in-progress: true

    env:
      OLD_VERSION: ${{ matrix.version == 'v4' && '4.15.0' || '5.0.0' }}
      POSTGRES_HOST: 172.17.0.1

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: strapi
          POSTGRES_PASSWORD: strapi
          POSTGRES_DB: strapi
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Get Current Repository
        uses: actions/checkout@v4

      - name: Read Current Strapi Version
        id: fetch-strapi-version
        run: echo "VERSION=$(cat release-versions/strapi-${{ matrix.version }}-latest.txt)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Latest ${{ matrix.version }} Strapi Image and Export to Docker
        uses: docker/build-push-action@v6
        with:
          load: true
          context: ./images/strapi-debian
          build-args: |
            STRAPI_VERSION=${{steps.fetch-strapi-version.outputs.VERSION}}
            NODE_VERSION=18
            NODE=node
            GITHUB_ACTIONS=1
          tags: pr-build-check-strapi-${{ matrix.version }}:latest
      
      - name: Test Latest ${{ matrix.version }} Strapi Image with SQLite
        timeout-minutes: 10
        run: |
          docker run --rm pr-build-check-strapi-${{ matrix.version }}:latest
      
      - name: Test Latest ${{ matrix.version }} Strapi Image with PostgreSQL
        timeout-minutes: 10
        run: |
          docker run --rm \
            -e DATABASE_CLIENT=postgres \
            -e DATABASE_HOST=${{ env.POSTGRES_HOST }} \
            -e DATABASE_PORT=5432 \
            -e DATABASE_NAME=strapi \
            -e DATABASE_USERNAME=strapi \
            -e DATABASE_PASSWORD=strapi \
            pr-build-check-strapi-${{ matrix.version }}:latest

      - name: Create Temp Volume
        run: |
          mkdir ${{ runner.temp }}/strapi-${{ matrix.version }}-${{ github.run_id }}
        
      - name: Build Old ${{ matrix.version }} Strapi Image and Export to Docker
        uses: docker/build-push-action@v6
        with:
          load: true
          context: ./images/strapi-debian
          build-args: |
            STRAPI_VERSION=${{ env.OLD_VERSION }}
            NODE_VERSION=18
            NODE=node
            GITHUB_ACTIONS=1
          tags: pr-build-check-strapi-${{ matrix.version }}:old

      - name: Init Old ${{ matrix.version }} Strapi Image with SQLite
        timeout-minutes: 10
        run: |
          docker run --rm -v ${{ runner.temp }}/strapi-${{ matrix.version }}-${{ github.run_id }}:/srv/app pr-build-check-strapi-${{ matrix.version }}:old
        
      - name: Test Upgrade from ${{ matrix.version }} to Latest Strapi Image with SQLite
        timeout-minutes: 10
        run: |
          docker run --rm -v ${{ runner.temp }}/strapi-${{ matrix.version }}-${{ github.run_id }}:/srv/app pr-build-check-strapi-${{ matrix.version }}:latest
